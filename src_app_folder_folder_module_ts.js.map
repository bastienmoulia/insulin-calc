{"version":3,"file":"src_app_folder_folder_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAU;KACtB;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;IAW9B,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,2EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,oDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AAElD,MAAM,gBAAgB,GAAG,GAAG,CAAC;IAOhB,UAAU,SAAV,UAAU;IASrB;IACA,CAAC;IAED,QAAQ;IACR,CAAC;IAED,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;SACxB;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAC5C,IAAI,IAAI,CAAC,UAAU,GAAG,gBAAgB,EAAE;gBACtC,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBACxF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;aACpD;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;aACrB;SACF;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7B;QACD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAG,IAAI,CAAC,UAAU,EAAE;gBAClB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC;aAC/B;SACF;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;SACxB;IACH,CAAC;CACF;;AArDY,UAAU;IALtB,wDAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,0KAAiC;;KAElC,CAAC;GACW,UAAU,CAqDtB;AArDsB;;;;;;;;;;;;;;;ACTvB,iEAAe,k0BAAk0B,SAAS,2vBAA2vB,cAAc,2TAA2T,SAAS,yGAAyG","sources":["./src/app/folder/folder-routing.module.ts","./src/app/folder/folder.module.ts","./src/app/folder/folder.page.ts","./src/app/folder/folder.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FolderPage } from './folder.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FolderPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FolderPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FolderPageRoutingModule } from './folder-routing.module';\n\nimport { FolderPage } from './folder.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FolderPageRoutingModule\n  ],\n  declarations: [FolderPage]\n})\nexport class FolderPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nconst bloodSugarTarget = 120;\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.page.html',\n  styleUrls: ['./folder.page.scss'],\n})\nexport class FolderPage implements OnInit {\n  public coef: number;\n  public carbohydrates: number;\n  public bolus: number;\n  public bloodSugar: number;\n  public sensitivityIndex: number;\n  public correction: number;\n  public total: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  openSettings() {\n    console.log('open');\n  }\n\n  calcBolus() {\n    if (this.coef && this.carbohydrates) {\n      const bolus = this.carbohydrates * this.coef / 10;\n      this.bolus = Math.round(bolus * 10) / 10;\n    } else {\n      this.bolus = undefined;\n    }\n    this.calcTotal();\n  }\n\n  calcCorrection() {\n    if (this.bloodSugar && this.sensitivityIndex) {\n      if (this.bloodSugar > bloodSugarTarget) {\n        const correction = ((this.bloodSugar - bloodSugarTarget) / 100) / this.sensitivityIndex;\n        this.correction = Math.round(correction * 10) / 10;\n      } else {\n        this.correction = 0;\n      }\n    } else {\n      this.correction = undefined;\n    }\n    this.calcTotal();\n  }\n\n  calcTotal() {\n    if (this.bolus) {\n      this.total = this.bolus;\n      if(this.correction) {\n        this.total += this.correction;\n      }\n    } else {\n      this.total = undefined;\n    }\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>Calculatrice d'insuline</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div id=\\\"container\\\">\\n    <ion-card>\\n      <ion-card-header color=\\\"primary\\\">\\n        <ion-card-title>Bolus</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Glucides (g)</ion-label>\\n          <ion-input [(ngModel)]=\\\"carbohydrates\\\" (ngModelChange)=\\\"calcBolus()\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Coefficient</ion-label>\\n          <ion-input [(ngModel)]=\\\"coef\\\" (ngModelChange)=\\\"calcBolus()\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"primary\\\" *ngIf=\\\"bolus >= 0\\\">\\n          <h1>{{ bolus }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header color=\\\"success\\\">\\n        <ion-card-title>Correction</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Indice de sensibilité</ion-label>\\n          <ion-input [(ngModel)]=\\\"sensitivityIndex\\\" (ngModelChange)=\\\"calcCorrection()\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Glycémie (mg/dL)</ion-label>\\n          <ion-input [(ngModel)]=\\\"bloodSugar\\\" (ngModelChange)=\\\"calcCorrection()\\\" type=\\\"number\\\" min=\\\"10\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"success\\\" *ngIf=\\\"correction >= 0\\\">\\n          <h1>{{ correction }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"total >= 0\\\">\\n      <ion-card-header color=\\\"danger\\\">\\n        <ion-card-title>Total</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-text color=\\\"danger\\\">\\n          <h1>{{ total }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}