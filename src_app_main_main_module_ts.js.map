{"version":3,"file":"src_app_main_main_module_ts.js","mappings":"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","sources":["./src/app/main/main-routing.module.ts","./src/app/main/main.module.ts","./src/app/main/main.page.ts","./src/app/main/main.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainPage } from './main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MainPageRoutingModule } from './main-routing.module';\n\nimport { MainPage } from './main.page';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, MainPageRoutingModule],\n  declarations: [MainPage],\n})\nexport class MainPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Meal, StorageService } from '../core/storage/storage.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n})\nexport class MainPage implements OnInit {\n  public coef: number;\n  public carbohydrates: number;\n  public bolus: number;\n  public bloodSugar: number;\n  public correction: number;\n  public total: number;\n\n  constructor(public storage: StorageService, private router: Router) {}\n\n  ngOnInit() {}\n\n  calcBolus() {\n    if (this.coef && this.carbohydrates) {\n      this.bolus = (this.carbohydrates * this.coef) / 10;\n    } else {\n      this.bolus = undefined;\n    }\n    this.calcTotal();\n  }\n\n  async calcCorrection() {\n    if (this.bloodSugar && this.storage.sensitivityIndex) {\n      this.storage.set('sensitivityIndex', this.storage.sensitivityIndex);\n      let bloodSugarTarget = 120;\n      let ratio = 100;\n      if (this.storage.bloodGlucoseUnits === 'gl') {\n        bloodSugarTarget = bloodSugarTarget / 100;\n        ratio = 1;\n      }\n      if (this.bloodSugar > bloodSugarTarget) {\n        this.correction =\n          (this.bloodSugar - bloodSugarTarget) /\n          ratio /\n          this.storage.sensitivityIndex;\n      } else {\n        this.correction = 0;\n      }\n    } else {\n      this.correction = undefined;\n    }\n    this.calcTotal();\n  }\n\n  calcTotal() {\n    if (this.bolus) {\n      this.total = this.bolus;\n      if (this.correction) {\n        this.total += this.correction;\n      }\n    } else {\n      this.total = undefined;\n    }\n  }\n\n  selectMeal(meal: Meal) {\n    this.coef = meal.coef;\n    this.calcBolus();\n  }\n\n  openSettings() {\n    this.router.navigate(['/settings']);\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>Calculatrice d'insuline</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button color=\\\"primary\\\" [routerLink]=\\\"['/settings']\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"settings-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div id=\\\"container\\\">\\n    <ion-card>\\n      <ion-card-header color=\\\"primary\\\">\\n        <ion-card-title>Bolus</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Glucides (g)</ion-label>\\n          <ion-input\\n            [(ngModel)]=\\\"carbohydrates\\\"\\n            (ngModelChange)=\\\"calcBolus()\\\"\\n            type=\\\"number\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Coefficient</ion-label>\\n          <ion-input\\n            [(ngModel)]=\\\"coef\\\"\\n            (ngModelChange)=\\\"calcBolus()\\\"\\n            type=\\\"number\\\"\\n          ></ion-input>\\n          <ion-button id=\\\"meal-button\\\">Repas</ion-button>\\n        </ion-item>\\n        <ion-text color=\\\"primary\\\" *ngIf=\\\"bolus >= 0\\\">\\n          <h1>\\n            {{ bolus | number: '1.0-' + storage.insulinUnitsAccuracy }} unités\\n          </h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header color=\\\"success\\\">\\n        <ion-card-title>Correction</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Indice de sensibilité</ion-label>\\n          <ion-input\\n            [(ngModel)]=\\\"storage.sensitivityIndex\\\"\\n            (ngModelChange)=\\\"calcCorrection()\\\"\\n            type=\\\"number\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label\\n            >Glycémie\\n            <ng-container *ngIf=\\\"storage.bloodGlucoseUnits === 'mgdl'\\\">\\n              (mg/dL)</ng-container\\n            >\\n            <ng-container *ngIf=\\\"storage.bloodGlucoseUnits === 'gl'\\\">\\n              (g/L)</ng-container\\n            >\\n          </ion-label>\\n          <ion-input\\n            [(ngModel)]=\\\"bloodSugar\\\"\\n            (ngModelChange)=\\\"calcCorrection()\\\"\\n            type=\\\"number\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"success\\\" *ngIf=\\\"correction >= 0\\\">\\n          <h1>\\n            {{ correction | number: '1.0-' + storage.insulinUnitsAccuracy }}\\n            unités\\n          </h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"total >= 0\\\">\\n      <ion-card-header color=\\\"danger\\\">\\n        <ion-card-title>Total</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-text color=\\\"danger\\\">\\n          <h1>\\n            {{ total | number: '1.0-' + storage.insulinUnitsAccuracy }} unités\\n          </h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\\n\\n<ion-popover trigger=\\\"meal-button\\\" [dismissOnSelect]=\\\"true\\\">\\n  <ng-template>\\n    <ion-content>\\n      <ion-list>\\n        <ion-item\\n          button=\\\"true\\\"\\n          *ngFor=\\\"let meal of storage.meals; let i = index\\\"\\n          (click)=\\\"selectMeal(meal)\\\"\\n        >\\n          <ion-label> {{ meal.name }} ({{ meal.coef }}) </ion-label>\\n        </ion-item>\\n        <ion-list-header>\\n          <ion-button (click)=\\\"openSettings()\\\">Changer les repas</ion-button>\\n        </ion-list-header>\\n      </ion-list>\\n    </ion-content>\\n  </ng-template>\\n</ion-popover>\\n\";"],"names":[],"sourceRoot":"webpack:///"}