{"version":3,"file":"src_app_main_main_module_ts.js","mappings":"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","sources":["./src/app/main/main-routing.module.ts","./src/app/main/main.module.ts","./src/app/main/main.page.ts","./src/app/main/main.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainPage } from './main.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MainPageRoutingModule } from './main-routing.module';\n\nimport { MainPage } from './main.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MainPageRoutingModule\n  ],\n  declarations: [MainPage]\n})\nexport class MainPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nconst bloodSugarTarget = 120;\n\ninterface Meal {\n  name: string;\n  coef: number;\n}\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.page.html',\n  styleUrls: ['./main.page.scss'],\n})\nexport class MainPage implements OnInit {\n  public coef: number;\n  public carbohydrates: number;\n  public bolus: number;\n  public bloodSugar: number;\n  public sensitivityIndex: number;\n  public correction: number;\n  public total: number;\n  public meals: Meal[] = [];\n\n  constructor() {\n    this.meals = [\n      { name: 'Petit dejeuner', coef: 1 },\n      { name: 'Dejeuner', coef: 2 },\n      { name: 'Gouter', coef: 3 },\n      { name: 'Diner', coef: 4 },\n    ];\n  }\n\n  ngOnInit() {\n  }\n\n  calcBolus() {\n    if (this.coef && this.carbohydrates) {\n      this.bolus = this.carbohydrates * this.coef / 10;\n    } else {\n      this.bolus = undefined;\n    }\n    this.calcTotal();\n  }\n\n  calcCorrection() {\n    if (this.bloodSugar && this.sensitivityIndex) {\n      if (this.bloodSugar > bloodSugarTarget) {\n        this.correction = ((this.bloodSugar - bloodSugarTarget) / 100) / this.sensitivityIndex;\n      } else {\n        this.correction = 0;\n      }\n    } else {\n      this.correction = undefined;\n    }\n    this.calcTotal();\n  }\n\n  calcTotal() {\n    if (this.bolus) {\n      this.total = this.bolus;\n      if (this.correction) {\n        this.total += this.correction;\n      }\n    } else {\n      this.total = undefined;\n    }\n  }\n\n  selectMeal(meal: Meal) {\n    this.coef = meal.coef;\n    this.calcBolus();\n  }\n\n  openSettings() {\n    // TODO:\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>Calculatrice d'insuline</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div id=\\\"container\\\">\\n    <ion-card>\\n      <ion-card-header color=\\\"primary\\\">\\n        <ion-card-title>Bolus</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Glucides (g)</ion-label>\\n          <ion-input [(ngModel)]=\\\"carbohydrates\\\" (ngModelChange)=\\\"calcBolus()\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Coefficient</ion-label>\\n          <ion-input [(ngModel)]=\\\"coef\\\" (ngModelChange)=\\\"calcBolus()\\\" type=\\\"number\\\"></ion-input>\\n          <ion-button id=\\\"meal-button\\\">Repas</ion-button>\\n        </ion-item>\\n        <ion-text color=\\\"primary\\\" *ngIf=\\\"bolus >= 0\\\">\\n          <h1>{{ bolus | number: '1.0-1' }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-header color=\\\"success\\\">\\n        <ion-card-title>Correction</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-item>\\n          <ion-label>Indice de sensibilité</ion-label>\\n          <ion-input [(ngModel)]=\\\"sensitivityIndex\\\" (ngModelChange)=\\\"calcCorrection()\\\" type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n        <ion-item>\\n          <ion-label>Glycémie (mg/dL)</ion-label>\\n          <ion-input [(ngModel)]=\\\"bloodSugar\\\" (ngModelChange)=\\\"calcCorrection()\\\" type=\\\"number\\\" min=\\\"10\\\"></ion-input>\\n        </ion-item>\\n        <ion-text color=\\\"success\\\" *ngIf=\\\"correction >= 0\\\">\\n          <h1>{{ correction | number: '1.0-1' }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"total >= 0\\\">\\n      <ion-card-header color=\\\"danger\\\">\\n        <ion-card-title>Total</ion-card-title>\\n      </ion-card-header>\\n\\n      <ion-card-content>\\n        <ion-text color=\\\"danger\\\">\\n          <h1>{{ total | number: '1.0-1' }} unités</h1>\\n        </ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n</ion-content>\\n\\n<ion-popover trigger=\\\"meal-button\\\" [dismissOnSelect]=\\\"true\\\">\\n  <ng-template>\\n    <ion-content>\\n      <ion-list *ngIf=\\\"meals.length > 0\\\">\\n        <ion-item button *ngFor=\\\"let meal of meals; let i = index\\\" (click)=\\\"selectMeal(meal)\\\">\\n          <ion-label>\\n            {{ meal.name }} ({{ meal.coef }})\\n          </ion-label>\\n        </ion-item>\\n        <ion-list-header>\\n          <ion-button (click)=\\\"openSettings()\\\">Changer les repas</ion-button>\\n        </ion-list-header>\\n      </ion-list>\\n    </ion-content>\\n  </ng-template>\\n</ion-popover>\\n\";"],"names":[],"sourceRoot":"webpack:///"}